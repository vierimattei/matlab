function foct = octsource(location,state)

msystemdim

%Taking the length of the locatin structure that gets passed by the
%'solvepde' command to the source function defined here.
% nr = numel(location.x);
% 
% %Pre-allocating empty vector for the function
% f = zeros(1,nr);
% 
% %Defining f
% f =      -a*heaviside(radiustot - sqrt(location.x.^2+location.y.^2+location.z.^2)).*...
%          (4*pi*G*mass./(volumeout));
%      


foct = zeros(1,numel(location.x));

%Defining an octahedron of point masses around the origin

foct = -a*(...
    heaviside(radiustot - sqrt((location.x-displacement).^2+location.y.^2+location.z.^2)).*...
                                (4*pi*G*mass./(volumeout))+...
    heaviside(radiustot - sqrt((location.x+displacement).^2+location.y.^2+location.z.^2)).*...
                                (4*pi*G*mass./(volumeout))+...
    heaviside(radiustot - sqrt((location.x).^2+(location.y-displacement).^2+location.z.^2)).*...
                                (4*pi*G*mass./(volumeout))+...
    heaviside(radiustot - sqrt((location.x).^2+(location.y+displacement).^2+location.z.^2)).*...
                                (4*pi*G*mass./(volumeout))+...                            
    heaviside(radiustot - sqrt((location.x).^2+location.y.^2+(location.z-displacement).^2)).*...
                                (4*pi*G*mass./(volumeout))+...
    heaviside(radiustot - sqrt((location.x).^2+location.y.^2+(location.z+displacement).^2)).*...
                                (4*pi*G*mass./(volumeout)));
end

